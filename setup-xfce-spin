#!/bin/bash

# set terminal styles
if [ -t 1 ] ; then # are we on terminal?
    # tput available?
    if [ ! "x`which tput 2>/dev/null`" = "x" ] ; then
        # supports colors ?
        ncolors=`tput colors`
        if [ -n "$ncolors" -a  $ncolors -ge 8 ] ; then
            style_bold="`tput bold`"
            style_underline="`tput smul`"
            style_standout="`tput smso`"
            style_normal="`tput sgr0`"
            style_black="`tput setaf 0`"
            style_red="`tput setaf 1`"
            style_green="`tput setaf 2`"
            style_yellow="`tput setaf 3`"
            style_blue="`tput setaf 4`"
            style_magenta="`tput setaf 5`"
            style_cyan="`tput setaf 6`"
            style_white="`tput setaf 7`"
        fi
    fi
fi

CURRUSER=`id -u`
if [ $CURRUSER = "0" ]; then
    echo "${style_red}Do not run this script as root - you will be asked for sudo password!${style_normal}"
    exit
fi

# exit when any command fails
set -e

REPO_PATH=`dirname $0`


# Prevent sudo password-entry timeout
bash -c "while true; do sudo -v; sleep 60; done" &
sudo_pid=$!

function ctrl_c() {
    echo "CTRL+C pressed..."
    kill -9 $sudo_pid
    exit
}
trap ctrl_c INT

echo "${style_yellow}Enter sudo password:${style_normal}"
sudo echo


############################################################################
echo "${style_blue}${style_bold}Adjust xfce4-terminal settings.${style_normal}"
mkdir -p ${HOME}/.config/xfce4/terminal
cp "${REPO_PATH}/xfce4-terminal/terminalrc" ${HOME}/.config/xfce4/terminal
echo "Done"
echo

if [ ! -e ${HOME}/.ssh/id_rsa.pub ]; then
    echo "Setup ssh key - ${style_yellow}Answer ssh-keygen's questions:${style_normal}"
    ssh-keygen
    echo
fi

############################################################################
echo "${style_blue}${style_bold}Install classic-light schemes (gtksourceview).${style_normal}"
sudo cp "${REPO_PATH}/gtksourceview-classic-light/classic-light.xml" /usr/share/gtksourceview-4/styles/
echo "Done"
echo


############################################################################
echo "${style_blue}${style_bold}Update packages...${style_normal}"
sudo dnf -y update
echo

# see https://code.visualstudio.com/docs/setup/linux
if [ ! -e /etc/yum.repos.d/vscode.repo ]; then
    echo "${style_blue}${style_bold}Prepare VSCode.${style_normal}"
    sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
    sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
    echo
fi

############################################################################
# see https://docs.fedoraproject.org/en-US/quick-docs/installing-chromium-or-google-chrome-browsers/
echo "${style_blue}${style_bold}Prepare Google Chrome.${style_normal}"
sudo dnf -y install fedora-workstation-repositories
sudo dnf -y config-manager --set-enabled google-chrome
echo "Done"
echo


############################################################################
echo "${style_blue}${style_bold}Install dev packages...${style_normal}"
sudo dnf -y install \
    caja \
    pluma \
    gnome-system-monitor \
    xfce4-sensors-plugin \
    xfce4-cpugraph-plugin \
    xfce4-cpufreq-plugin \
    htop \
    avahi-devel \
    avahi-tools \
    blueman \
    gedit \
    libreoffice \
    google-chrome-stable \
    firefox \
    gvfs-smb \
    \
    qt-creator \
    valgrind \
    perf \
    podman \
    podman-docker \
    clang-tools-extra \
    cmake git clazy \
    systemd-devel \
    openssl-devel \
    python3-devel python3-numpy \
    xsd xerces-c-devel \
    fftw-devel \
    php-jsonlint python3-jsonschema \
    qt5-linguist qt5-doctools qt5-qtscript \
    qt5-qtlocation-devel \
    qt5-qtcharts-devel \
    qt5-qtdeclarative-devel \
    qt5-qtlocation-devel \
    qt5-qtmultimedia-devel \
    qt5-qtquickcontrols qt5-qtquickcontrols2-devel \
    qt5-qtsensors-devel \
    qt5-qtserialport-devel \
    qt5-qtsvg-devel \
    qt5-qttools-devel \
    qt5-qtvirtualkeyboard-devel \
    qt5-qtwayland-devel \
    qt5-qtwebchannel-devel \
    qt5-qtwebengine-devel \
    qt5-qtwebkit-devel \
    qt5-qtx11extras-devel \
    qt5-qtxmlpatterns-devel \
    qt5-qtconnectivity-devel \
    qt-devel \
    kf5-networkmanager-qt-devel kf5-modemmanager-qt-devel kf5-syntax-highlighting-devel \
    qwt-qt5-devel \
    \
    flatbuffers-devel flatbuffers-compiler protobuf-devel protobuf-compiler \
    jq \
    xz \
    ninja-build \
    npm \
    java \
    xmlstarlet \
    python3-pylint \
    python3-pytest \
    python3-lsp-server \
    \
    gtest-devel \
    cpputest-devel \
    lcov gcovr \
    kernel-devel \
    glmark2 \
    plantuml plantumlqeditor \
    dialog \
    ghex \
    kolourpaint \
    krdc \
    kcachegrind \
    cppcheck \
    code \
    snapd \
    wireshark nmap \
    dotnet-sdk-6.0 \
    dotnet-sdk-7.0 \
    nuget \
    nunit \
    minicom \
    putty telnet \
    ncurses-compat-libs \
    libusb-compat-0.1 \
    GConf2 \
    glibc.i686

sudo sudo dnf -y remove bash-color-prompt || true

# ncurses-compat-libs for TI-DSP see https://www.ti.com/tool/CCSTUDIO
echo

############################################################################
echo "${style_blue}${style_bold}Add to group dialout.${style_normal}"
ME=$(whoami)
sudo usermod -aG dialout "$ME"
echo "Done"
echo

############################################################################
echo "${style_blue}${style_bold}Quieten docker / podman notes.${style_normal}"
sudo touch /etc/containers/nodocker
echo "Done"
echo

############################################################################
#echo
#echo "${style_yellow}${style_bold}In case you are asked often for unlocking password:${style_normal}"
#while true; do
#    echo
#    read -p "${style_yellow}Do you want to reset your keyring password (it is restored after next login)? (y/n) ${style_normal}" yn
#    case $yn in
#        [yY] ) echo "${style_blue}${style_bold}Deleting gnome-keyring password.${style_normal}"
#            rm -f ~/.local/share/keyrings/login.keyring
#            echo "Done"
#            echo
#            break;;
#        [nN] ) echo "No action - keep gnome-keyring password";
#            break;;
#        * ) echo "${style_blue}${style_bold}Invalid response - enter 'y' or 'n'${style_normal}";;
#    esac
#done


# Kill sudo passwort-timeout prevention
kill -9 $sudo_pid


############################################################################
echo
echo
echo "${style_yellow}${style_bold}Log off - HIGLY RECOMMENDED !!!!!${style_normal}"
xfce4-session-logout
echo
